name: "Imatic Build"
description: "Builds images using docker compose."
inputs:
  docker_compose_file:
    description: "The path to docker-compose file."
    required: true
    default: "./docker-compose.yml"
  build:
    description: "Build images"
    required: false
    default: "true"
  push:
    description: "Push images"
    required: false
    default: "true"
  registry:
    description: "The name of the docker registry to push to."
    required: true
    default: "ghcr.io"
outputs:
  project-image:
    description: "The name of the image."
    value: ${{ steps.env.outputs.project-image }}
  project-version:
    description: "The version of the image."
    value: ${{ steps.env.outputs.project-version }}
runs:
  using: "composite"
  steps:
    - id: env
      name: Set env variables
      shell: bash
      run: |
        PROJECT_IMAGE=${{ inputs.registry }}/${{ github.repository }}
        PROJECT_VERSION=$(git rev-parse --short HEAD)
        echo "PROJECT_IMAGE=$PROJECT_IMAGE" >> $GITHUB_ENV
        echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
        echo "project-image=$PROJECT_IMAGE" >> $GITHUB_OUTPUT
        echo "project-version=$PROJECT_VERSION" >> $GITHUB_OUTPUT
    - name: Build
      shell: bash
      if: ${{ inputs.build == true || inputs.build == 'true' }}
      run: |
        docker compose --progress=plain -f ${{ inputs.docker_compose_file }} build
    - name: Push
      shell: bash
      if: ${{ inputs.push == true || inputs.push == 'true' }}
      run: |
        docker compose --progress=plain -f ${{ inputs.docker_compose_file }} push
